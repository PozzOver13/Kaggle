row.names = F)
View(my_sub_stage2)
summary(my_sub_stage2)
View(df_woe_final)
coach_score_model_final %>% summary()
team_score_model_final %>% summary()
rank_score_model_final %>% summary()
mad_score_model_final %>% summary()
View(df_woe_final)
df_woe_final_test = df_woe_final %>%
mutate(med_p = (MAX + MIN)/2)
df_woe_final_test %>%
filter(feature %in% c("delta_nrm_c_top_wins", "delta_nrm_c_season",
"delta_poss_m_vs_topseeds"
"delta_opp_poss_m_vs_topseeds"
"delta_tov_ratio_m_vs_topseeds"
"delta_reb_rate_m_vs_topseeds"
"delta_opp_true_fg_pct_m_vs_topseeds"
"delta_off_rating_m_vs_topseeds"
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds",
"delta_nrm_MOR",
"delta_nrm_SAG"))
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c("delta_nrm_c_top_wins", "delta_nrm_c_season",
"delta_poss_m_vs_topseeds",
"delta_opp_poss_m_vs_topseeds",
"delta_tov_ratio_m_vs_topseeds",
"delta_reb_rate_m_vs_topseeds",
"delta_opp_true_fg_pct_m_vs_topseeds",
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds",
"delta_nrm_MOR",
"delta_nrm_SAG"))
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c("delta_nrm_c_top_wins", "delta_nrm_c_season",
"delta_poss_m_vs_topseeds",
"delta_opp_poss_m_vs_topseeds",
"delta_tov_ratio_m_vs_topseeds",
"delta_reb_rate_m_vs_topseeds",
"delta_opp_true_fg_pct_m_vs_topseeds",
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds",
"delta_nrm_MOR",
"delta_nrm_SAG")) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
#"delta_reb_rate_m_vs_topseeds",
#"delta_opp_true_fg_pct_m_vs_topseeds",
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds",
#"delta_nrm_MOR",
#"delta_nrm_SAG")) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
#"delta_reb_rate_m_vs_topseeds",
#"delta_opp_true_fg_pct_m_vs_topseeds",
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds"
#"delta_nrm_MOR",
#"delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
#"delta_reb_rate_m_vs_topseeds",
#"delta_opp_true_fg_pct_m_vs_topseeds",
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds"
#"delta_nrm_MOR",
#"delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
geom_smooth() +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
#"delta_reb_rate_m_vs_topseeds",
#"delta_opp_true_fg_pct_m_vs_topseeds",
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds"
#"delta_nrm_MOR",
#"delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
geom_smooth(method = "gam") +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
#"delta_reb_rate_m_vs_topseeds",
#"delta_opp_true_fg_pct_m_vs_topseeds",
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds"
#"delta_nrm_MOR",
#"delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm") +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
#"delta_reb_rate_m_vs_topseeds",
#"delta_opp_true_fg_pct_m_vs_topseeds",
#"delta_off_rating_m_vs_topseeds",
#"delta_def_rating_m_vs_topseeds",
#"delta_net_rating_m_vs_topseeds"
"delta_nrm_MOR",
"delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm") +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
#"delta_reb_rate_m_vs_topseeds",
#"delta_opp_true_fg_pct_m_vs_topseeds",
#"delta_off_rating_m_vs_topseeds",
#"delta_def_rating_m_vs_topseeds",
#"delta_net_rating_m_vs_topseeds"
"delta_nrm_MOR",
"delta_nrm_POM",
"delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm") +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
"delta_opp_poss_m_vs_topseeds",
"delta_tov_ratio_m_vs_topseeds",
"delta_reb_rate_m_vs_topseeds",
"delta_opp_true_fg_pct_m_vs_topseeds"
#"delta_off_rating_m_vs_topseeds",
#"delta_def_rating_m_vs_topseeds",
#"delta_net_rating_m_vs_topseeds"
# "delta_nrm_MOR",
# "delta_nrm_POM",
# "delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm") +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
#"delta_nrm_c_top_wins",
#"delta_nrm_c_season",
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
"delta_reb_rate_m_vs_topseeds"
#"delta_opp_true_fg_pct_m_vs_topseeds"
#"delta_off_rating_m_vs_topseeds",
#"delta_def_rating_m_vs_topseeds",
#"delta_net_rating_m_vs_topseeds"
# "delta_nrm_MOR",
# "delta_nrm_POM",
# "delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm") +
facet_wrap(~feature)
df_woe_final_test %>%
filter(feature %in% c(
"delta_nrm_c_top_wins",
"delta_nrm_c_season"
#"delta_poss_m_vs_topseeds",
#"delta_opp_poss_m_vs_topseeds",
#"delta_tov_ratio_m_vs_topseeds",
#"delta_reb_rate_m_vs_topseeds"
#"delta_opp_true_fg_pct_m_vs_topseeds"
#"delta_off_rating_m_vs_topseeds",
#"delta_def_rating_m_vs_topseeds",
#"delta_net_rating_m_vs_topseeds"
# "delta_nrm_MOR",
# "delta_nrm_POM",
# "delta_nrm_SAG"
)) %>%
ggplot(aes(med_p, WOE)) +
geom_point() +
geom_line() +
geom_smooth(method = "lm") +
facet_wrap(~feature)
names(my_sub_final)
df_bracket = my_sub_final %>%
select("LF_TeamID",
"RT_TeamID",
"delta_nrm_c_top_wins",
"delta_nrm_c_season"
"delta_poss_m_vs_topseeds",
"delta_opp_poss_m_vs_topseeds",
"delta_tov_ratio_m_vs_topseeds",
"delta_reb_rate_m_vs_topseeds",
"delta_opp_true_fg_pct_m_vs_topseeds"
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds",
"delta_nrm_MOR",
"delta_nrm_POM",
"delta_nrm_SAG",
"coach_score",
"team_score",
"rank_score",
"wins_pred"
) %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(LF_TeamID = TeamID),
by = "LF_TeamID") %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(RT_TeamID = TeamID),
by = "RT_TeamID")
df_bracket = my_sub_final %>%
select_("LF_TeamID",
"RT_TeamID",
"delta_nrm_c_top_wins",
"delta_nrm_c_season"
"delta_poss_m_vs_topseeds",
"delta_opp_poss_m_vs_topseeds",
"delta_tov_ratio_m_vs_topseeds",
"delta_reb_rate_m_vs_topseeds",
"delta_opp_true_fg_pct_m_vs_topseeds"
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds",
"delta_nrm_MOR",
"delta_nrm_POM",
"delta_nrm_SAG",
"coach_score",
"team_score",
"rank_score",
"wins_pred"
) %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(LF_TeamID = TeamID),
by = "LF_TeamID") %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(RT_TeamID = TeamID),
by = "RT_TeamID")
my_sub_final %>%
select_("LF_TeamID",
"RT_TeamID",
"delta_nrm_c_top_wins",
"delta_nrm_c_season"
"delta_poss_m_vs_topseeds",
"delta_opp_poss_m_vs_topseeds",
"delta_tov_ratio_m_vs_topseeds",
"delta_reb_rate_m_vs_topseeds",
"delta_opp_true_fg_pct_m_vs_topseeds"
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds",
"delta_nrm_MOR",
"delta_nrm_POM",
"delta_nrm_SAG",
"coach_score",
"team_score",
"rank_score",
"wins_pred"
) %>%head()
df_bracket = my_sub_final %>%
select_("LF_TeamID",
"RT_TeamID",
"delta_nrm_c_top_wins",
"delta_nrm_c_season",
"delta_poss_m_vs_topseeds",
"delta_opp_poss_m_vs_topseeds",
"delta_tov_ratio_m_vs_topseeds",
"delta_reb_rate_m_vs_topseeds",
"delta_opp_true_fg_pct_m_vs_topseeds",
"delta_off_rating_m_vs_topseeds",
"delta_def_rating_m_vs_topseeds",
"delta_net_rating_m_vs_topseeds",
"delta_nrm_MOR",
"delta_nrm_POM",
"delta_nrm_SAG",
"coach_score",
"team_score",
"rank_score",
"wins_pred"
) %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(LF_TeamID = TeamID),
by = "LF_TeamID") %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(RT_TeamID = TeamID),
by = "RT_TeamID")
df_bracket = my_sub_final %>%
select_("LF_TeamID",
"RT_TeamID",
"coach_score",
"team_score",
"rank_score",
"wins_pred"
) %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(LF_TeamID = TeamID),
by = "LF_TeamID") %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(RT_TeamID = TeamID),
by = "RT_TeamID")
View(df_bracket)
df_bracket_apply = df_bracket %>%
filter(TeamName.x == "Virginia" | TeamName.y == "Virginia")
View(df_bracket_apply)
df_bracket_apply = df_bracket %>%
filter(TeamName.x == "Virginia" | TeamName.y == "Virginia") %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
df_bracket_apply = df_bracket %>%
filter(TeamName.x == "Creighton" | TeamName.y == "Creighton") %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
df_bracket_apply = df_bracket %>%
filter(TeamName.x == "Virginia" | TeamName.y == "Virginia") %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
df_bracket_apply = df_bracket %>%
filter(TeamName.x == "Duke" | TeamName.y == "Duke") %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
df_bracket = my_sub_final %>%
select_("LF_TeamID",
"RT_TeamID",
"seed_n_x",
"seed_n_y",
"coach_score",
"team_score",
"rank_score",
"wins_pred"
) %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(LF_TeamID = TeamID),
by = "LF_TeamID") %>%
left_join(teams %>%
select(TeamID, TeamName) %>%
rename(RT_TeamID = TeamID),
by = "RT_TeamID")
df_bracket_apply = df_bracket %>%
filter(TeamName.x == "Duke" | TeamName.y == "Duke") %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
df_bracket_apply = df_bracket %>%
filter(TeamName.x == "Kansas" | TeamName.y == "Kansas") %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
View(df_bracket)
team = "Kansas"
df_bracket_apply = df_bracket %>%
filter(TeamName.x == team | TeamName.y == team) %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
write.table(df_bracket,
file = "datasets/13R_bracket.csv",
sep = ",",
row.names = F)
View(df_bracket_apply)
View(df_bracket_apply)
team = "Michigan St"
df_bracket_apply = df_bracket %>%
filter(TeamName.x == team | TeamName.y == team) %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
View(df_bracket_apply)
team = "Auburn"
df_bracket_apply = df_bracket %>%
filter(TeamName.x == team | TeamName.y == team) %>%
mutate(wins_pred = round(wins_pred, 5))
View(df_bracket_apply)
# 1. Import dataset
trainData <- read.csv('https://raw.githubusercontent.com/selva86/datasets/master/breastcancer_training.csv')
testData <- read.csv('https://raw.githubusercontent.com/selva86/datasets/master/breastcancer_test.csv')
# 2. Build Logistic Model
logitmod <- glm(Class ~ Cl.thickness + Cell.size + Cell.shape, family = "binomial", data=trainData)
# 3. Predict on testData
pred <- predict(logitmod, newdata = testData, type = "response")
# 4. If p > .5, then Class is 1 else 0
y_pred <- ifelse(pred > 0.5, 1, 0)
y_act <- testData$Class
# 5. Accuracy
mean(y_pred == y_act)  # 94%
library(caret)
caret::confusionMatrix(y_pred, y_act, positive="1", mode="everything")
install.packages("InformationValue")
library(InformationValue)
somersD(y_act, y_pred)
logloss = -(log(0.00000023))
logloss
logloss = -(log(0.02))
logloss
logloss = -(log(0.05))
logloss
logloss = -(log(1 - 0.00000023))
logloss
round(logloss, 10)
logloss = -(log(1 - 0.05))
logloss
(0.05+2.99)/2
(2.3e-07+15.28519)/2
logloss = -(log(1 - 0.025))
logloss
logloss = -(log(0.025))
logloss
# 1. Import dataset
trainData <- read.csv('https://raw.githubusercontent.com/selva86/datasets/master/breastcancer_training.csv')
testData <- read.csv('https://raw.githubusercontent.com/selva86/datasets/master/breastcancer_test.csv')
# 2. Build Logistic Model
logitmod <- glm(Class ~ Cl.thickness + Cell.size + Cell.shape, family = "binomial", data=trainData)
# 3. Predict on testData
pred <- predict(logitmod, newdata = testData, type = "response")
pred
# 4. If p > .5, then Class is 1 else 0
y_pred <- ifelse(pred > 0.5, 1, 0)
y_act <- testData$Class
# 5. Accuracy
mean(y_pred == y_act)  # 94%
y_pred == y_act
y_pred
y_act
y_pred == y_act
caret::confusionMatrix(y_pred, y_act, positive="1", mode="everything")
sum(y_pred)
70/81
123/131
(122+70)/(122+70+11+1)
122/123
70/81
